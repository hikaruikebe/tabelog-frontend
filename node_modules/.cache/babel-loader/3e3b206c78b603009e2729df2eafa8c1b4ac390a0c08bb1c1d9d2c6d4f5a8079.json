{"ast":null,"code":"var _jsxFileName = \"/Users/hikaruikebe/Library/CloudStorage/GoogleDrive-hri2104@columbia.edu/My Drive/CS Stuff/Projects/tabelog/tabelog-react/src/MultiFilters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { items } from \"./items\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MultiFilters() {\n  _s();\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [filteredItems, setFilteredItems] = useState(items);\n  let filters = [\"Bags\", \"Watches\", \"Sports\", \"Sunglasses\"];\n  useEffect(() => {\n    axios.get(\"/restaurants/english\");\n  });\n  const handleFilterButtonClick = selectedCategory => {\n    if (selectedFilters.includes(selectedCategory)) {\n      let filters = selectedFilters.filter(el => el !== selectedCategory);\n      setSelectedFilters(filters);\n    } else {\n      setSelectedFilters([...selectedFilters, selectedCategory]);\n    }\n  };\n  useEffect(() => {\n    filterItems();\n  }, [selectedFilters]);\n  const filterItems = () => {\n    if (selectedFilters.length > 0) {\n      let tempItems = selectedFilters.map(selectedCategory => {\n        let temp = items.filter(item => item.category === selectedCategory);\n        return temp;\n      });\n      setFilteredItems(tempItems.flat());\n    } else {\n      setFilteredItems([...items]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: filters.map((category, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilterButtonClick(category),\n        className: `button ${selectedFilters !== null && selectedFilters !== void 0 && selectedFilters.includes(category) ? \"active\" : \"\"}`,\n        children: category\n      }, `filters-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: filteredItems.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, `items-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(MultiFilters, \"3XT2cahkN5z0EGbfff/28zYmeJA=\");\n_c = MultiFilters;\nvar _c;\n$RefreshReg$(_c, \"MultiFilters\");","map":{"version":3,"names":["React","useEffect","useState","items","jsxDEV","_jsxDEV","MultiFilters","_s","selectedFilters","setSelectedFilters","filteredItems","setFilteredItems","filters","axios","get","handleFilterButtonClick","selectedCategory","includes","filter","el","filterItems","length","tempItems","map","temp","item","category","flat","children","className","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/hikaruikebe/Library/CloudStorage/GoogleDrive-hri2104@columbia.edu/My Drive/CS Stuff/Projects/tabelog/tabelog-react/src/MultiFilters.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { items } from \"./items\";\nimport \"./style.css\";\n\nexport default function MultiFilters() {\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [filteredItems, setFilteredItems] = useState(items);\n\n  let filters = [\"Bags\", \"Watches\", \"Sports\", \"Sunglasses\"];\n\n  useEffect(() => {\n    axios.get(\"/restaurants/english\");\n  });\n\n  const handleFilterButtonClick = (selectedCategory) => {\n    if (selectedFilters.includes(selectedCategory)) {\n      let filters = selectedFilters.filter((el) => el !== selectedCategory);\n      setSelectedFilters(filters);\n    } else {\n      setSelectedFilters([...selectedFilters, selectedCategory]);\n    }\n  };\n\n  useEffect(() => {\n    filterItems();\n  }, [selectedFilters]);\n\n  const filterItems = () => {\n    if (selectedFilters.length > 0) {\n      let tempItems = selectedFilters.map((selectedCategory) => {\n        let temp = items.filter((item) => item.category === selectedCategory);\n        return temp;\n      });\n      setFilteredItems(tempItems.flat());\n    } else {\n      setFilteredItems([...items]);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"buttons-container\">\n        {filters.map((category, idx) => (\n          <button\n            onClick={() => handleFilterButtonClick(category)}\n            className={`button ${\n              selectedFilters?.includes(category) ? \"active\" : \"\"\n            }`}\n            key={`filters-${idx}`}\n          >\n            {category}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"items-container\">\n        {filteredItems.map((item, idx) => (\n          <div key={`items-${idx}`} className=\"item\">\n            <p>{item.name}</p>\n            <p className=\"category\">{item.category}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}